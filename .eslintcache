[{"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\index.js":"1","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\App.js":"2","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\routes\\index.jsx":"4","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Routes\\index.jsx":"5","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\Home.jsx":"6","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\New-existing.jsx":"7","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\NewSheet.jsx":"8","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\ExistingSheet.jsx":"9","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\Header.jsx":"10","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\GenerateReport.jsx":"11","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\ExpensesCard.jsx":"12"},{"size":478,"mtime":1621036925457,"results":"13","hashOfConfig":"14"},{"size":229,"mtime":1621265553834,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":366,"mtime":1621266124051,"results":"17","hashOfConfig":"18"},{"size":1015,"mtime":1621971872749,"results":"19","hashOfConfig":"14"},{"size":1125,"mtime":1621890436081,"results":"20","hashOfConfig":"14"},{"size":1451,"mtime":1621355405542,"results":"21","hashOfConfig":"14"},{"size":3977,"mtime":1621871288288,"results":"22","hashOfConfig":"14"},{"size":12192,"mtime":1621883114946,"results":"23","hashOfConfig":"14"},{"size":3400,"mtime":1621953314002,"results":"24","hashOfConfig":"14"},{"size":4543,"mtime":1621973439389,"results":"25","hashOfConfig":"14"},{"size":988,"mtime":1622044149371,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1p4cotu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"js8ptz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\index.js",[],["55","56"],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\App.js",[],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\routes\\index.jsx",["57"],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Routes\\index.jsx",[],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\Home.jsx",["58","59"],"import React from 'react'\r\nimport Header from './Header.jsx'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope, whatsapp  } from '@fortawesome/free-solid-svg-icons'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nclass Home extends React.Component  {\r\n    \r\n    render()    {\r\n        return  (\r\n            <div className='fluid-container'>\r\n                <Header />\r\n                <main>\r\n                    <div className=\"invite-text\">\r\n                        <p>...the more the merrier</p>\r\n                        <p>Invite an accountability partner</p>\r\n                    </div>\r\n                    <div className=\"invite-buttons\">\r\n                        <button>Invite via whatsapp <span>\r\n                        <FontAwesomeIcon icon={['fab', 'whatsapp']} /></span></button>\r\n                        <button>Invite via e-mail <span>\r\n                        <FontAwesomeIcon icon={faEnvelope} /></span>\r\n                        </button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\New-existing.jsx",["60"],"import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from \"react-router\"\r\n\r\nclass SelectPage extends React.Component    {\r\n    constructor(props)  {\r\n        super(props)\r\n    }\r\n\r\n    goToPreviousPage = (routeB) =>    {\r\n        this.props.history.push(routeB)\r\n    }\r\n\r\n    handleCreateExpenseButton = (routeC) => {\r\n        this.props.history.push(routeC)\r\n    }\r\n\r\n    handleExistingExpenseButton = (routeD) =>   {\r\n        this.props.history.push(routeD)\r\n    }\r\n    render ()   {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav>\r\n                        <FontAwesomeIcon onClick = {() => this.goToPreviousPage('/')} id=\"arrow-left\" icon={faArrowLeft} style={{ fontSize: '2rem'}} />\r\n                    </nav>\r\n                </header>\r\n                <main> \r\n                      <div className=\"create-expense-button\">\r\n                          <button onClick ={() => this.handleCreateExpenseButton('/2')} id=\"new-sheet\" className=\"new-sheet\">Create expense</button>\r\n                          <button onClick = {() => this.handleExistingExpenseButton('/3')} className=\"existing-sheet\" id=\"existing-sheet\">...existing sheet</button>\r\n                      </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SelectPage)","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\NewSheet.jsx",[],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\ExistingSheet.jsx",["61","62","63","64","65","66","67"],"import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from \"react-router\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ExistingSheet extends React.Component {\r\n    constructor(props)  {\r\n        super(props)\r\n        this.state = {\r\n            merchant : '',\r\n            date : '',\r\n            currency : '',\r\n            total : 0,\r\n            description : '',\r\n            category : '',\r\n            selectExpensesName : '',\r\n            selectSpendingLimit : 0,\r\n            expensesID : uuidv4(),\r\n            expensesList : [],\r\n            updatedExpensesList : []\r\n        }\r\n\r\n    }\r\n    componentDidMount = () =>   {\r\n        const dbExpenses = JSON.parse(localStorage.getItem('expensesList'));\r\n        console.log(dbExpenses);\r\n        if (dbExpenses.length) this.setState({expensesList: dbExpenses}) \r\n        \r\n        // dbExpenses.map(expenses => {\r\n        //     this.setState({\r\n        //         savedExpensesID : expenses._expensesID,\r\n        //         selectSpendingLimit : expenses._spendingLimit,\r\n        //         selectExpensesName : expenses.__expensesName\r\n        //     })\r\n        // })\r\n    }\r\n    submitExpenseForm = (e) =>  {\r\n        e.preventDefault()\r\n        const { merchant, date, currency, total, description, category } = this.state\r\n\r\n           if (merchant === '' \r\n                || date === '' \r\n                || currency === '' \r\n                || total < 0 \r\n                || description === '' \r\n                || category === '')    {\r\n                    alert('fill all entries')\r\n            } else {\r\n                const dbUpdatedExpenses = JSON.parse(localStorage.getItem('updatedExpensesList'));\r\n\r\n                let expenses = {\r\n                    _expensesID: this.state.expensesID,\r\n                    _expensesName: this.state.selectExpensesName,\r\n                    _spendingLimit: this.state.selectSpendingLimit,\r\n                    expense : {\r\n                        _merchant : merchant,\r\n                        _date : date,\r\n                        _currency : currency,\r\n                        _total : total,\r\n                        _description: description,\r\n                        _category : category\r\n                    }\r\n                }\r\n                const newArr = [...this.state.updatedExpensesList, expenses];\r\n                \r\n                this.setState({updatedExpensesList: newArr})\r\n                console.log({newArr});\r\n                console.log(dbUpdatedExpenses)\r\n                \r\n                if (dbUpdatedExpenses) {\r\n                    localStorage.setItem('updatedExpensesList', JSON.stringify([...dbUpdatedExpenses, expenses]))\r\n                } else {\r\n                    localStorage.setItem('updatedExpensesList', JSON.stringify(newArr))\r\n                }\r\n            }\r\n                //  this.state.expensesList.forEach(i => {\r\n                //     const tableRow = document.createElement('tr')\r\n                //     const tdOne = document.createElement('td')\r\n                //     tdOne.textContent = i.expense._date\r\n    \r\n                //     const tdTwo = document.createElement('td')\r\n                //     tdTwo.textContent = i.expense._merchant\r\n    \r\n                //     const tdThree = document.createElement('td')\r\n                //     tdThree.textContent = i.expense._description\r\n    \r\n                //     const tdFour = document.createElement('td')\r\n                //     tdFour.textContent = i.expense._category\r\n    \r\n                //     const tdFive = document.createElement('td')\r\n                //     tdFive.textContent = i.expense._total\r\n                    \r\n                //     const table = document.getElementById('table')\r\n\r\n                //     table.appendChild(tableRow)\r\n                //     tableRow.appendChild(tdOne)\r\n                //     tableRow.appendChild(tdTwo)\r\n                //     tableRow.appendChild(tdThree)\r\n                //     tableRow.appendChild(tdFour)\r\n                //     tableRow.appendChild(tdFive)\r\n                // })\r\n            \r\n            }          \r\n    \r\n            \r\n    closeExistingSheet = (routeE) =>  {\r\n        this.props.history.push(routeE)\r\n    }\r\n\r\n    handleSpendingLimitOptions = (e) => {\r\n        e.preventDefault()\r\n        const selectedExpensesName = e.target.value\r\n    \r\n        this.state.expensesList.map(expenses => {\r\n            if (selectedExpensesName === expenses._expensesName && this.state.expensesID)  {\r\n                return this.setState({\r\n                    selectSpendingLimit : expenses._spendingLimit,\r\n                    selectExpensesName : selectedExpensesName,\r\n                })\r\n            }\r\n        })\r\n        console.log(this.state.selectSpendingLimit)\r\n        console.log(this.state.selectExpensesName)\r\n        console.log(this.state.expensesID)\r\n        \r\n    }\r\n\r\n    handleMerchantChange = (e) =>   {\r\n        e.preventDefault()\r\n        const { merchant } = this.state\r\n        const _merchant = e.target.value\r\n        this.setState({\r\n            merchant : _merchant\r\n        })\r\n    \r\n    }\r\n\r\n    handleDateChange = (e) =>   {\r\n        e.preventDefault()\r\n        const { date } = this.state\r\n        const _date = e.target.value\r\n        this.setState({\r\n            date : _date\r\n        })\r\n    }\r\n\r\n    handleCurrencyChange = (e) => {\r\n        e.preventDefault()\r\n        const { currency } = this.state\r\n        const _currency = e.target.value\r\n        this.setState({\r\n            currency : _currency\r\n        })\r\n    }\r\n\r\n    handleTotalChange = (e) =>  {\r\n        e.preventDefault()\r\n        const { total } = this.state\r\n        const _total = e.target.value\r\n        this.setState({\r\n            total : _total\r\n        })\r\n    }\r\n\r\n    handleDescriptionChange = (e) =>    {\r\n        e.preventDefault()\r\n        const { description } = this.state\r\n        const _description = e.target.value\r\n        this.setState({\r\n            description : _description\r\n        })\r\n    }\r\n\r\n    handleCategoryChange = (e) =>   {\r\n        e.preventDefault()\r\n        const { category } = this.state\r\n        const _category = e.target.value\r\n        this.setState({\r\n            category : _category\r\n        })\r\n    }\r\n    render()    {        \r\n        return ( \r\n            <div>\r\n                <header>\r\n                    <nav>\r\n                         <FontAwesomeIcon\r\n                          onClick = {() => this.closeExistingSheet('/1')} \r\n                          id=\"faTimes\" icon={ faTimes } \r\n                          style = {{fontSize: '2rem'}}/>\r\n                    </nav>\r\n                </header>\r\n                <main>\r\n                     <div className=\"existing-sheet-layout\">\r\n                         <p>{}</p>\r\n                         <form id='form' onSubmit ={this.submitExpenseForm}>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"spending-limit-select\"></label>\r\n                                  <select onChange = { this.handleSpendingLimitOptions } \r\n                                   name=\"spending-limit-select\" id=\"spending-limit-select\">\r\n                                   {this.state.expensesList.map((expense, index) => (<option key={index} value={expense._expensesName}>\r\n                                   {expense._expensesName}</option>) )}\r\n                                  </select>\r\n                                  <span id='spending-limit'>Balance: {this.state.selectSpendingLimit} </span>\r\n                             </div>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"merchant\">Merchant</label>\r\n                                  <input id=\"merchant\" type=\"text\" placeholder='merchant'\r\n                                  onChange = {this.handleMerchantChange} />\r\n                             </div>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"date\">Date</label>\r\n                                  <input id=\"date\" name=\"date\" type=\"date\"\r\n                                  onChange = {this.handleDateChange} />\r\n                             </div>\r\n                             <div id='currency-rows' className=\"rows\">\r\n                                  <label htmlFor=\"currency\"></label>\r\n                                  <select name=\"currency\" id=\"currency\"\r\n                                      onChange = {this.handleCurrencyChange}>\r\n                                      <option value=\"\">[available currency]</option>\r\n                                      <option value=\"NGN\">Naira</option>\r\n                                      <option value=\"$\">Us Dollars</option>\r\n                                      <option value=\"CAD\">CAD</option>\r\n                                      <option value=\"\">Pounds</option>\r\n                                      <option value=\"\">Euro</option>\r\n                                      <option value=\"Y\">Yen</option>\r\n                                  </select>\r\n                                  <label htmlFor=\"total\">Total</label>\r\n                                  <input id=\"total\" type=\"number\" placeholder = 'total'\r\n                                   onChange = {this.handleTotalChange} />\r\n                             </div>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"description\">Desription</label>\r\n                                  <input id=\"description\" name=\"description\" type=\"text\" \r\n                                   placeholder = 'description'\r\n                                  onChange = {this.handleDescriptionChange} />\r\n                             </div>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"category\">Category</label>\r\n                                  <select name=\"category\" id=\"category\"\r\n                                  onChange = {this.handleCategoryChange}>\r\n                                  <option value=\"\">[select category]</option>\r\n                                  <option value=\"rent\">Rent</option>\r\n                                  <option value=\"food\">Food</option>\r\n                                  <option value=\"transportation\">Fuel/Transportation</option>\r\n                                  <option value=\"black-tax\">Black Tax</option>\r\n                                  <option value=\"power\">Power</option>\r\n                                  <option value=\"internet\">Internet</option>\r\n                                  <option value=\"entertainment\">Entertainment</option>\r\n                                  <option value=\"misc\">Misc</option>\r\n                                  </select>\r\n                             </div>\r\n                             <div className=\"rows\">\r\n                                  <label htmlFor=\"reimburse\">Reimburse</label>\r\n                                  <input id=\"reimburse\" name=\"reimburse\" type=\"checkbox\" />\r\n                             </div>\r\n                             <input type=\"submit\" value=\"save\" />\r\n                             <input id='reset' type=\"reset\" value=\"reset\" />\r\n                         </form>\r\n                         <div id='tableDiv' className=\"tableDiv\">\r\n                              <table id='table'>\r\n                                  <tr>\r\n                                     <thead>\r\n                                          <td>Date</td>\r\n                                          <td>Merchant</td>\r\n                                          <td>Description</td>\r\n                                          <td>Category</td>\r\n                                          <td>Amount</td>\r\n                                     </thead>\r\n                                  </tr>\r\n                              </table>\r\n                         </div>\r\n                    </div>\r\n                </main> \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withRouter(ExistingSheet)  ","C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\Header.jsx",[],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\GenerateReport.jsx",["68","69","70","71"],"C:\\Users\\JOSEPH\\Desktop\\project\\frameworks\\expense-tracker\\src\\Components\\ExpensesCard.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":7,"column":25},{"ruleId":"77","severity":1,"message":"78","line":4,"column":22,"nodeType":"79","messageId":"80","endLine":4,"endColumn":30},{"ruleId":"77","severity":1,"message":"81","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":7,"column":5,"nodeType":"84","messageId":"85","endLine":9,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":115,"column":46,"nodeType":"88","messageId":"89","endLine":115,"endColumn":48},{"ruleId":"77","severity":1,"message":"90","line":131,"column":17,"nodeType":"79","messageId":"80","endLine":131,"endColumn":25},{"ruleId":"77","severity":1,"message":"91","line":141,"column":17,"nodeType":"79","messageId":"80","endLine":141,"endColumn":21},{"ruleId":"77","severity":1,"message":"92","line":150,"column":17,"nodeType":"79","messageId":"80","endLine":150,"endColumn":25},{"ruleId":"77","severity":1,"message":"93","line":159,"column":17,"nodeType":"79","messageId":"80","endLine":159,"endColumn":22},{"ruleId":"77","severity":1,"message":"94","line":168,"column":17,"nodeType":"79","messageId":"80","endLine":168,"endColumn":28},{"ruleId":"77","severity":1,"message":"95","line":177,"column":17,"nodeType":"79","messageId":"80","endLine":177,"endColumn":25},{"ruleId":"77","severity":1,"message":"96","line":3,"column":19,"nodeType":"79","messageId":"80","endLine":3,"endColumn":30},{"ruleId":"86","severity":1,"message":"87","line":27,"column":53,"nodeType":"88","messageId":"89","endLine":27,"endColumn":55},{"ruleId":"86","severity":1,"message":"87","line":37,"column":62,"nodeType":"88","messageId":"89","endLine":37,"endColumn":64},{"ruleId":"86","severity":1,"message":"87","line":83,"column":83,"nodeType":"88","messageId":"89","endLine":83,"endColumn":85},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mSwitch\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mRoute\u001b[39m path \u001b[32m'/'\u001b[39m exact component \u001b[33m=\u001b[39m {\u001b[33mHome\u001b[39m} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mRoute\u001b[39m path \u001b[32m'/1'\u001b[39m exact component \u001b[33m=\u001b[39m {\u001b[33mHome\u001b[39m} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mSwitch\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-unused-vars","'whatsapp' is defined but never used.","Identifier","unusedVar","'fab' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'merchant' is assigned a value but never used.","'date' is assigned a value but never used.","'currency' is assigned a value but never used.","'total' is assigned a value but never used.","'description' is assigned a value but never used.","'category' is assigned a value but never used.","'CSVDownload' is defined but never used.","no-global-assign","no-unsafe-negation"]